services:
  flightbookdb:
    container_name: flightbookdb
    ports:
      - "3306:3306"
    environment:
      MYSQL_LOG_CONSOLE: "true"
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql/script.sql:/docker-entrypoint-initdb.d/script.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 60s
    extends:
      service: db-config
      file: base-config.yml
  
  flightbookserver:
    container_name: flightbookserver
    image: afshan2001/flightbookapp:latest
    depends_on:
      flightbookdb:
        condition: service_healthy
    extends:
      service: network-config
      file: base-config.yml
    environment:
      - MYSQL_HOST=flightbookdb
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=flightbookdb
      - JWT_SECRET=fhskdhfskfhkhfiyrkhfsdh
      - REACT_APP_FRONTEND=http://localhost:8080
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    entrypoint: flask run --host=0.0.0.0
    ports:
      - "5000:5000"

  flightbookclient:
    container_name: flightbookclient
    image: afshan2001/flightbookclient:latest
    extends:
      service: network-config
      file: base-config.yml
    build:
      dockerfile: Dockerfile
      context: ../client
      args:
        REACT_APP_BACKEND: http://localhost:5000
        REACT_APP_FRONTEND: http://localhost:8080
    restart: always
    depends_on:
      flightbookserver:
        condition: service_healthy
    ports:
      - "8080:80"  

networks:
  flightbook-network:
    driver: bridge
